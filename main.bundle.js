(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"* {\n  box-sizing: border-box;\n}\n\n:root {\n  min-height: 100vh;\n}\n\n:root, body {\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-template-rows: 80px 1fr;\n  position: relative;\n}\n\nheader {\n  grid-column: 1 / 3;\n  background-color: beige;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  justify-items: center;\n  align-items: center;\n}\n\nh1, h2 {\n  margin: 0;\n}\n\nheader h1 {\n  grid-column: 2 / 3;\n}\n\nbutton {\n  cursor: pointer;\n  padding: 5px 10px;\n}\n\n#add-task-btn {\n  grid-column: 3 / 4;\n  margin-left: auto;\n  margin-right: 20px;\n}\n\n.sidebar {\n  background-color: azure;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n}\n\n.sidebar h2 {\n  margin-bottom: 10px;\n  align-self: center;\n}\n\n.sidebar ul {\n  list-style: none;\n  padding: 0;\n}\n\n#add-project-btn {\n  align-self: center;\n}\n\n.modal {\n  position: fixed;\n  z-index: 10;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  padding-top: 40px;\n}\n\n.hide {\n  display: none;\n}\n\n.modal-content {\n  background-color: white;\n  width: 500px;\n  height: 500px;\n  padding: 20px;\n  border: 4px solid azure;\n  border-radius: 5px;\n}\n\n.modal-content form {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.modal-content form input,\n.modal-content form select {\n  padding: 2px 5px;\n}\n\n.tasks {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\nmain {\n  padding: 20px;\n}\n\nmain h2 {\n  text-align: center;\n  margin-bottom: 10px;\n}\n\n.task {\n  border-radius: 5px;\n  box-shadow: 0 0 2px 2px gray;\n  padding: 5px 10px;\n  cursor: pointer;\n}\n\n.task-info {\n  height: 50px;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  justify-items: center;\n  align-items: center;\n}\n\n.task-description {\n  min-height: 50px;\n  padding: 10px 0;\n}\n\n.task-description textarea {\n  width: 100%;\n}\n\n.task input {\n  cursor: pointer;\n}\n\n#task-title {\n  font-weight: bold;\n}\n\n.completed-task {\n  opacity: .5;\n}\n\n.project-list {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.project {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.project span {\n  cursor: pointer;\n}\n\n.project span:hover {\n  text-decoration: underline;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,SAAS;EACT,aAAa;EACb,gCAAgC;EAChC,4BAA4B;EAC5B,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,aAAa;EACb,qCAAqC;EACrC,qBAAqB;EACrB,mBAAmB;AACrB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,WAAW;EACX,MAAM;EACN,OAAO;EACP,WAAW;EACX,YAAY;EACZ,oCAAoC;EACpC,aAAa;EACb,uBAAuB;EACvB,iBAAiB;AACnB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,aAAa;EACb,aAAa;EACb,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,QAAQ;AACV;;AAEA;;EAEE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,4BAA4B;EAC5B,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,qCAAqC;EACrC,qBAAqB;EACrB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,QAAQ;AACV;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,0BAA0B;AAC5B",sourcesContent:["* {\n  box-sizing: border-box;\n}\n\n:root {\n  min-height: 100vh;\n}\n\n:root, body {\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-template-rows: 80px 1fr;\n  position: relative;\n}\n\nheader {\n  grid-column: 1 / 3;\n  background-color: beige;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  justify-items: center;\n  align-items: center;\n}\n\nh1, h2 {\n  margin: 0;\n}\n\nheader h1 {\n  grid-column: 2 / 3;\n}\n\nbutton {\n  cursor: pointer;\n  padding: 5px 10px;\n}\n\n#add-task-btn {\n  grid-column: 3 / 4;\n  margin-left: auto;\n  margin-right: 20px;\n}\n\n.sidebar {\n  background-color: azure;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n}\n\n.sidebar h2 {\n  margin-bottom: 10px;\n  align-self: center;\n}\n\n.sidebar ul {\n  list-style: none;\n  padding: 0;\n}\n\n#add-project-btn {\n  align-self: center;\n}\n\n.modal {\n  position: fixed;\n  z-index: 10;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  padding-top: 40px;\n}\n\n.hide {\n  display: none;\n}\n\n.modal-content {\n  background-color: white;\n  width: 500px;\n  height: 500px;\n  padding: 20px;\n  border: 4px solid azure;\n  border-radius: 5px;\n}\n\n.modal-content form {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.modal-content form input,\n.modal-content form select {\n  padding: 2px 5px;\n}\n\n.tasks {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\nmain {\n  padding: 20px;\n}\n\nmain h2 {\n  text-align: center;\n  margin-bottom: 10px;\n}\n\n.task {\n  border-radius: 5px;\n  box-shadow: 0 0 2px 2px gray;\n  padding: 5px 10px;\n  cursor: pointer;\n}\n\n.task-info {\n  height: 50px;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  justify-items: center;\n  align-items: center;\n}\n\n.task-description {\n  min-height: 50px;\n  padding: 10px 0;\n}\n\n.task-description textarea {\n  width: 100%;\n}\n\n.task input {\n  cursor: pointer;\n}\n\n#task-title {\n  font-weight: bold;\n}\n\n.completed-task {\n  opacity: .5;\n}\n\n.project-list {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.project {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.project span {\n  cursor: pointer;\n}\n\n.project span:hover {\n  text-decoration: underline;\n}"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);r&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],d=r.base?c[0]+r.base:c[0],A=a[d]||0,l="".concat(d," ").concat(A);a[d]=A+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=r(n,o),d=0;d<a.length;d++){var A=t(a[d]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),s=t(565),c=t.n(s),d=t(216),A=t.n(d),l=t(589),p=t.n(l),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=A(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const E=document.createElement("header"),C=document.createElement("h1");C.textContent="TODO LIST",E.appendChild(C);const g=document.createElement("button");g.type="button",g.textContent="Add task",g.id="add-task-btn",g.addEventListener("click",(()=>{document.querySelector("#task-modal").classList.remove("hide")})),E.appendChild(g);const h=E,f=document.createElement("main"),x=document.createElement("h2");x.textContent="DEFAULT",x.id="current-project",f.appendChild(x);const B=document.createElement("div");B.className="tasks",f.appendChild(B);const b=f,y=document.createElement("div");y.classList="modal hide",y.id="project-modal",y.innerHTML='\n  <div class="modal-content">\n    <form id="project-form">\n      <label>\n        Title\n        <input\n          type="text"\n          placeholder="Title"\n          name="title"\n          required\n        >\n      </label>\n      <button type="submit" id="submit-project">\n        Add Project\n      </button>\n    </form>\n  </div>\n  ';const k=y,v=document.createElement("div");v.className="sidebar",v.appendChild(k);const j=document.createElement("h2");j.textContent="PROJECTS",v.appendChild(j);const T=document.createElement("button");T.type="button",T.id="add-project-btn",T.innerText="Add Project",T.addEventListener("click",(()=>{k.classList.remove("hide")})),v.appendChild(T);const P=document.createElement("ul");P.className="project-list",v.appendChild(P);const L=v,w=document.createElement("div");w.classList="modal hide",w.id="task-modal",w.innerHTML='\n  <div class="modal-content">\n    <form id="task-form">\n      <label>\n        Title\n        <input\n          type="text"\n          placeholder="Title"\n          name="title"\n          required\n        >\n      </label>\n      <label>\n        Description\n        <textarea\n          placeholder="Description"\n          name="description"\n        ></textarea>\n      </label>\n      <label>\n       Due date\n        <input\n          type="date"\n          name="dueDate"\n          required\n        >\n      </label>\n      <label>\n      Priority\n        <select name="priority">\n          <option value="high">\n            High\n          </option>\n          <option value="medium">\n            Medium\n          </option>\n          <option value="low">\n            Low\n          </option>\n        </select>\n      </label>\n      <button type="submit" id="submit-task">\n        Add Task\n      </button>\n    </form>\n  </div>\n  ';const S=w,q=class{constructor(n,e,t,r){this.title=n,this.description=e,this.dueDate=t,this.priority=r,this.completed=!1}toggle(){this.completed=!this.completed}get description(){return this._description}set description(n){this._description=n}};class D{static counter=0;constructor(n){this.id=D.counter,this.name=n,this.tasks=[],D.counter++}addTask(n){this.tasks.push(n)}deleteTask(n){this.tasks.splice(n,1)}get tasks(){return this._tasks}set tasks(n){this._tasks=n}get name(){return this._name}set name(n){this._name=n}}const I=D,M=()=>{const n=JSON.parse(localStorage.getItem("myProjects"));if(void 0!==n&&n){let e=n.map((n=>(n=>{const e=new I("");return Object.assign(e,n),e})(n)));return e=e.map((n=>(n.tasks=n.tasks.map((n=>(n=>{const e=new q("","","","");return Object.assign(e,n),e})(n))),n))),e}return[]},N=n=>{localStorage.setItem("myProjects",JSON.stringify(n))},O=(()=>{const n=()=>{const t=document.querySelector(".project-list");t.innerHTML="",z.getProjects().forEach((r=>{const o=document.createElement("li");o.className="project",o.dataset.id=r.id;const a=document.createElement("span");a.textContent=r.name,a.addEventListener("click",(()=>{z.setCurrentProject(o.dataset.id),document.querySelector("#current-project").textContent=z.getCurrentProject().name.toUpperCase(),e()})),o.appendChild(a);const i=document.createElement("button");i.type="button",i.textContent="Delete",i.addEventListener("click",(()=>{z.getCurrentIndex()==r.id&&(z.setCurrentProject(0),e()),z.deleteProjectById(r.id),n()})),o.appendChild(i),t.appendChild(o)}))},e=()=>{const n=document.querySelector(".tasks");n.innerHTML="",z.getCurrentProject().tasks.forEach(((t,r)=>{const o=document.createElement("div");o.className="task",o.dataset.index=r;const a=document.createElement("div");a.className="task-info";const i=document.createElement("span");i.id="task-title",i.textContent=t.title,a.appendChild(i);const s=document.createElement("span");s.textContent=`Due: ${t.dueDate}`,a.appendChild(s);const c=document.createElement("span");c.textContent=`Priority: ${t.priority}`,a.appendChild(c);const d=document.createElement("label");d.textContent="Completed: ";const A=document.createElement("input");A.type="checkbox",A.checked=t.completed,A.addEventListener("click",(n=>{n.stopPropagation();const e=z.getTaskByIndex(r);e.toggle(),e.completed?o.classList.add("completed-task"):o.classList.remove("completed-task")})),d.appendChild(A),a.appendChild(d);const l=document.createElement("button");l.type="button",l.innerText="Delete",l.addEventListener("click",(n=>{n.stopPropagation(),z.deleteTaskByIndex(r),e()})),a.appendChild(l),o.appendChild(a);const p=document.createElement("div");p.classList="task-description hide";const u=document.createElement("textarea");u.textContent=t.description,u.addEventListener("click",(n=>{n.stopPropagation()})),u.addEventListener("focusout",(n=>{const{value:e}=n.target;z.updateTaskDescription(r,e)})),p.appendChild(u),o.appendChild(p),o.addEventListener("click",(()=>{p.classList.toggle("hide")})),n.appendChild(o)})),document.querySelector("#current-project").textContent=z.getCurrentProject().name.toUpperCase()};return{generateProjects:n,generateTasks:e}})(),U=O,Z=(()=>{let n=[],e=0;const t=()=>{N(n)};return{getProjects:()=>n,setCurrentProject:n=>{e=n},getCurrentProject:()=>n[e],getCurrentIndex:()=>e,getTaskByIndex:t=>n[e].tasks[t],updateTaskDescription:(r,o)=>{n[e].tasks[r].description=o,t()},deleteTaskByIndex:r=>{n[e].deleteTask(r),t()},deleteProjectById:e=>{n.splice(e,1),t()},addTask:r=>{n[e].addTask(r),t(),U.generateTasks()},getFromStorage:()=>{n=M(),U.generateProjects()},writeToStorage:t,createProject:n=>{const e=new I(n);return t(),U.generateProjects(),e}}})(),z=Z;document.body.appendChild(S),document.body.appendChild(h),document.body.appendChild(L),document.body.appendChild(b),z.getFromStorage(),0===z.getProjects().length?z.createProject("Default"):U.generateProjects(),U.generateTasks();const R=S.querySelector("#task-form");R.addEventListener("submit",(n=>{n.preventDefault();const e=n.target.elements,t=new q(e.title.value,e.description.value,e.dueDate.value,e.priority.value);z.addTask(t),S.classList.add("hide"),R.reset()}));const W=document.querySelector("#project-modal"),Y=document.querySelector("#project-form");Y.addEventListener("submit",(n=>{n.preventDefault();const e=n.target.elements;z.createProject(e.title.value),Y.reset(),W.classList.add("hide")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,